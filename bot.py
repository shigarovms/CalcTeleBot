# Telegram bot, that calculates

import os
from boto.s3.connection import S3Connection
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor, exceptions
from aiogram.types import ContentType, File, Message
from asyncio import sleep
from os import remove
from converter import text_from_ogg
from calculations import exp_calculator
from InlineMarkup import calcKeyboard
import VARS


# TODO Get token from Heroku config variables
# TOKEN = S3Connection(os.environ[''])
# print(type(TOKEN))
bot = Bot(token=os.environ('TOKEN'))
# bot = Bot(token=VARS.TOKEN)
dp = Dispatcher(bot)

# TODO make ExpressionTexts Database
exp_text = {}


# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
async def setup_bot_commands(dp):
    bot_commands = [
        types.BotCommand(command="/start", description="–° —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞. –í—ã–∑–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏"),
        types.BotCommand(command="/help", description="–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?")
    ]
    await bot.set_my_commands(bot_commands)


# /start
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    # –ù–∞ —Å—Ç–∞—Ä—Ç–µ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_user_id = message.from_user.id
    exp_text[current_user_id] = ''
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º
    await message.answer('–ü—Ä–∏–≤–µ—Ç!‚úã –Ø –±–æ—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –ü–æ—Å—á–∏—Ç–∞—é –¥–ª—è —Ç–µ–±—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç–∏–ø–∞ ((34/2-15)**3 –∏–ª–∏ 16*19-177'
                         '\n\n–ï—â–µ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è! 144-27 –∏–ª–∏ "5% –æ—Ç 169" –ü–æ–ø—Ä–æ–±—É–π! ',
                         reply_markup=calcKeyboard)

    await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!')
    await setup_bot_commands(dp)

# /help
# TODO –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.answer('–ù–∞–∂–∏–º–∞–π —Ü–∏—Ñ–µ—Ä–∫–∏, –∑–Ω–∞–∫–∏, —Å–∫–æ–±–∫–∏! '
                         '\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –Ω–∞–∂–º–µ—à—å = —è –ø–æ—Å—á–∏—Ç–∞—é —Ç–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω–æ. '
                         '\n–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ–ª–µ "–°–æ–æ–±—â–µ–Ω–∏–µ" –≤–Ω–∏–∑—É. '
                         '–û—Ç–ø—Ä–∞–≤–ª—è–π –µ–≥–æ –º–Ω–µ –±–µ–∑ –∑–Ω–∞–∫–∞ = –≤ –∫–æ–Ω—Ü–µ - —è –ø–æ—Å—á–∏—Ç–∞—é. '
                         '\n\n–ï—â–µ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è! 144-27*10 –∏–ª–∏ 5% –æ—Ç 169 –ü–æ–ø—Ä–æ–±—É–π! '
                         '\n\n–ü—Ä–∏–º–µ—Ä: ((34/2-15)**3',
                         reply_markup=calcKeyboard)
    await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!')


# –ó–∞—â–∏—Ç–∞ –æ—Ç quit()
@dp.message_handler(regexp=r'\w+\(\)\w*')
async def quit_protection(message: types.Message):
    await bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞, –º–∏—Å—Ç–µ—Ä —Ö–∞–∫–∫–µ—Ä! –ù–æ –º–µ–Ω—è —Ç–∞–∫ –ª–µ–∫–≥–æ –Ω–µ –≤—ã–∫–ª—é—á–∏—Ç—å.',
                           reply_markup=calcKeyboard)
    await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
@dp.message_handler()
async def response_message(message: types.Message):
    answer = exp_calculator(message.text)
    if '–ì–æ—Ç–æ–≤–æ!' in answer:
        await bot.send_message(message.from_user.id, answer)
    else:
        await bot.send_message(message.from_user.id, answer, reply_markup=calcKeyboard)
        await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!')


# 1 input callback - –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª –∫ –≤—ã—Ä–∞–∂–µ–Ω–∏—é –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞
@dp.callback_query_handler(text_contains='input')
async def expression_consrtuctor_keys(call: types.callback_query):
    id = call.from_user.id
    symbToAdd = call.data[-1]
    if id in exp_text:
        exp_text[call.from_user.id] += symbToAdd
    else:
        exp_text[call.from_user.id] = symbToAdd
    await bot.edit_message_text(text=exp_text[call.from_user.id],
                                message_id=(call.message.message_id + 1),
                                chat_id=call.from_user.id)


# 2 delete callback - —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª –≤—ã—Ä–∞–∂–µ–Ω–∏—è
@dp.callback_query_handler(text_contains='delete')
async def delete_from_expression(call: types.callback_query):
    exp_text[call.from_user.id] = exp_text[call.from_user.id][:-1]
    try:
        await bot.edit_message_text(text=exp_text[call.from_user.id],
                                    message_id=(call.message.message_id + 1),
                                    chat_id=call.from_user.id)
    except exceptions.MessageTextIsEmpty:
        try:
            await bot.edit_message_text(text='–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!',
                                        message_id=(call.message.message_id + 1),
                                        chat_id=call.from_user.id)
        except exceptions.MessageNotModified:
            pass


# 3 calculate callback - –≤—ã—á–∏—Å–ª—è–µ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
@dp.callback_query_handler(text_contains='calculate')
async def expression_calculate(call: types.callback_query):
    id = call.from_user.id

    if exp_text[id] == '' or exp_text[id] == 'quit()':
        return
    else:
        try:
            x = eval(exp_text[id])
            if x - int(x) == 0:
                answer = int(x)
            else:
                answer = x
        except ZeroDivisionError:
            answer = '–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å –Ω–µ–ª—å–∑—è! –Ω–µ —è —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª üòÅ'
        except Exception:
            await bot.answer_callback_query(callback_query_id=call.id, text=f'–£–º–∞ –Ω–µ –ø—Ä–∏–ª–æ–∂—É, –∫–∞–∫ —Ç–∞–∫–æ–µ –ø–æ—Å—á–∏—Ç–∞—Ç—å:'
                                                                            f'\n\n{exp_text[id]}', show_alert=True)
            answer = f'{exp_text[id]}' \
                     f'\nüôÑ'
            await bot.edit_message_text(text=answer, message_id=(call.message.message_id + 1), chat_id=id)
            await sleep(5)
            await bot.edit_message_text(text=exp_text[id], message_id=(call.message.message_id + 1), chat_id=id)
            return
        else:
            answer = f'{exp_text[id]} = {answer}'
            # –û–±–Ω—É–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞
            exp_text[id] = ''
    await bot.edit_message_text(text=answer, message_id=(call.message.message_id + 1), chat_id=id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler(content_types=[ContentType.VOICE])
async def voice_message_handler(message: Message):
    # TODO —Å–¥–µ–ª–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑ –æ—Ç–≤–µ—Ç –±—ã–ª 69,
    #  –¥–∞–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —à–ª–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ 54-7 -> *(54-7)
    voice = await message.voice.get_file()
    ogg_file_name = f'{voice.file_id}.ogg'
    await bot.download_file(file_path=voice.file_path, destination=ogg_file_name)
    expression = text_from_ogg(ogg_file_name)
    remove(ogg_file_name)
    answer = exp_calculator(expression)
    if '–ì–æ—Ç–æ–≤–æ!' in answer:
        await bot.send_message(message.from_user.id, answer)
    else:
        await bot.send_message(message.from_user.id, answer,  reply_markup=calcKeyboard)
        await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤ —Å—á–∏—Ç–∞—Ç—å!')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=setup_bot_commands)