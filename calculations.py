
# import re
from re import match


def text_prepared(text):
    expression = text.lower()
    expression = expression.replace(' —Ö ', '*')
    expression = expression.replace(' x ', '*')
    expression = expression.replace(',', '.')
    expression = expression.replace('–º–∏–Ω—É—Å', '-')

    expression = expression.replace(' –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤', '%')
    expression = expression.replace(' –ø—Ä–æ—Ü–µ–Ω—Ç–∞', '%')
    expression = expression.replace(' –ø—Ä–æ—Ü–µ–Ω—Ç', '%')
    expression = expression.replace('–≤ —Å—Ç–µ–ø–µ–Ω–∏', '**')
    expression = expression.replace('—Å—Ç–µ–ø–µ–Ω–∏', '**')
    # print(expression)
    return expression


def procent_calc(exp):
    procent = float(exp.split('%')[0])
    tzeloe = float(exp.split(' ')[-1])
    x = (0.01 * procent * tzeloe)
    x = int(x) if x - int(x) == 0 else x
    return x


def exp_calculator(text):
    expression = text_prepared(text)

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Ç–∏–ø–∞ "5% –æ—Ç 69"
    if match(r'\d*.*\d+%\W\w+\W\d+', expression):
        answer = f'{text} = {procent_calc(expression)}'
        return answer
    try:
        x = eval(expression)
        x = int(x) if x - int(x) == 0 else x
    except ZeroDivisionError:
        answer = '–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å –Ω–µ–ª—å–∑—è! –Ω–µ —è —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª üòÅ'
    except Exception:
        answer = f'{expression} ...—Ö–º–º–º\n–Ø —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–∫–∏–µ –∫–∞–∫ (34/2-15)**3 –∏–ª–∏ 33%3-7//4'
    else:
        answer = f'–ì–æ—Ç–æ–≤–æ! –í–æ—Ç, —á—Ç–æ —É –º–µ–Ω—è –≤—ã—à–ª–æ: {expression} = {x}'

    return answer

